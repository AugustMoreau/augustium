name: Release and Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '0.1.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: augustium-linux-x86_64.tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: augustium-linux-aarch64.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: augustium-macos-x86_64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: augustium-macos-aarch64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: augustium-windows-x86_64.zip

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        cp target/${{ matrix.target }}/release/augustc dist/
        cp target/${{ matrix.target }}/release/august dist/
        cp README.md LICENSE dist/
        tar -czf ${{ matrix.name }} -C dist .
    
    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir dist
        cp target/${{ matrix.target }}/release/augustc.exe dist/
        cp target/${{ matrix.target }}/release/august.exe dist/
        cp README.md LICENSE dist/
        Compress-Archive -Path dist/* -DestinationPath ${{ matrix.name }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}

  publish-github:
    name: Publish to GitHub Releases
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: '**/*'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-cargo:
    name: Publish to Cargo
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Prepare NPM package
      run: |
        cp npm-package.json package.json
        mkdir -p bin scripts
        cp scripts/install.js scripts/
        npm install --production
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          augustium/augustium:latest
          augustium/augustium:${{ steps.version.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: publish-github
    if: github.event_name == 'release'
    
    steps:
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: augustium
        formula-path: Formula/augustium.rb
        homebrew-tap: AugustMoreau/homebrew-augustium
        download-url: https://github.com/AugustMoreau/augustium/archive/${{ github.ref_name }}.tar.gz
        commit-message: |
          augustium ${{ github.ref_name }}
          
          Created by https://github.com/mislav/bump-homebrew-formula-action
      env:
        COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}