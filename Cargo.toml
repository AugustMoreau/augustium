[package]
name = "augustc"
version = "1.0.1"
edition = "2021"
authors = ["August Moreau <august@augustium.org>", "Augustium Team"]
description = "The Augustium programming language compiler and virtual machine for blockchain smart contracts"
license = "MIT"
repository = "https://github.com/AugustMoreau/augustium"
homepage = "https://augustium.org"
documentation = "https://docs.augustium.org"
keywords = ["blockchain", "smart-contracts", "compiler", "virtual-machine", "augustium"]
categories = ["development-tools", "compilers", "cryptography::cryptocurrencies"]
readme = "README.md"
include = [
    "src/**/*",
    "examples/**/*",
    "Cargo.toml",
    "README.md",
    "LICENSE",
    "INSTALL.md"
]

[lib]
name = "augustc"
path = "src/lib.rs"

[[bin]]
name = "augustc"
path = "src/main.rs"

[[bin]]
name = "august"
path = "src/bin/august.rs"

[[bin]]
name = "augustium-lsp"
path = "src/bin/augustium-lsp.rs"

[dependencies]
# Core dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_bytes = "0.11"
toml = "0.8"
dirs = "5.0"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Cryptography
sha2 = "0.10"
sha3 = "0.10"
secp256k1 = { version = "0.28", features = ["recovery"] }
ripemd = "0.1"
hex = "0.4"
rand = "0.8"

# Serialization
bincode = "1.3"

# Utilities
once_cell = "1.19"
lazy_static = "1.4"
log = "0.4"
env_logger = "0.10"
regex = "1.0"
fastrand = "2.0"

# Machine Learning Dependencies
# Core ML libraries
ndarray = { version = "0.15", features = ["blas"], optional = true }
linfa = { version = "0.7", optional = true }
linfa-linear = { version = "0.7", optional = true }
linfa-trees = { version = "0.7", optional = true }
linfa-clustering = { version = "0.7", optional = true }
linfa-nn = { version = "0.7", optional = true }
# Note: candle dependencies temporarily disabled due to f16 compatibility issues
# candle-core = { version = "0.3", optional = true }
# candle-nn = { version = "0.3", optional = true }
# candle-transformers = { version = "0.3", optional = true }
tch = { version = "0.13", optional = true }  # PyTorch bindings
tensorflow = { version = "0.21", optional = true }  # TensorFlow bindings

# GPU/CUDA support
cudarc = { version = "0.9", optional = true }
wgpu = { version = "0.19", optional = true }

# Computer Vision
image = { version = "0.24", optional = true }
imageproc = { version = "0.23", optional = true }
opencv = { version = "0.88", optional = true }

# Natural Language Processing
tokenizers = { version = "0.15", optional = true }
hf-hub = { version = "0.3", optional = true }
text-splitter = { version = "0.8", optional = true }

# Reinforcement Learning (placeholder - these would need actual implementations)
# gymnasium = { version = "0.1", optional = true }  # Not available on crates.io
# reinforcementlearning = { version = "0.1", optional = true }  # Not available on crates.io

# Optimization and Hyperparameter Tuning (placeholder - these would need actual implementations)
# optuna = { version = "0.1", optional = true }  # Not available on crates.io
# hyperopt = { version = "0.1", optional = true }  # Not available on crates.io
# skopt = { version = "0.1", optional = true }  # Not available on crates.io
# hyperband = { version = "0.1", optional = true }  # Not available on crates.io

# Distributed Computing (placeholder - these would need actual implementations)
# mpi = { version = "0.6", optional = true }  # Available but complex setup
# nccl = { version = "0.1", optional = true }  # Not available on crates.io

# Advanced Math and Statistics
statrs = { version = "0.16", optional = true }
rustfft = { version = "6.1", optional = true }
argmin = { version = "0.8", optional = true }
argmin-math = { version = "0.3", optional = true }

# Optional features for advanced functionality
rayon = { version = "1.8", optional = true }
tokio = { version = "1.0", features = ["full"], optional = true }

[dev-dependencies]
# Testing
criterion = "0.5"
proptest = "1.4"
quickcheck = "1.0"
quickcheck_macros = "1.0"
tempfile = "3.8"

# Test utilities
temp-dir = "0.1"
assert_cmd = "2.0"
predicates = "3.0"

[features]
default = ["std"]
std = []
parallel = ["rayon"]
async = ["tokio"]

# ML Features
ml-basic = ["ndarray", "linfa", "linfa-linear", "linfa-trees", "linfa-clustering", "linfa-nn"]
ml-gpu = ["cudarc", "wgpu"]
ml-deep = ["ndarray", "linfa", "linfa-nn"]  # Note: candle dependencies disabled due to compatibility issues
ml-pytorch = ["tch"]
ml-tensorflow = ["tensorflow"]
ml-cv = ["image", "imageproc", "opencv"]
ml-nlp = ["tokenizers", "hf-hub", "text-splitter"]
ml-math = ["statrs", "rustfft", "argmin", "argmin-math"]
# Note: RL, optimization, and distributed features are implemented but dependencies are placeholders
# ml-rl = []  # Would include RL dependencies when available
# ml-optimization = []  # Would include optimization dependencies when available  
# ml-distributed = []  # Would include distributed dependencies when available
ml-full = ["ml-basic", "ml-gpu", "ml-deep", "ml-pytorch", "ml-tensorflow", "ml-cv", "ml-nlp", "ml-math"]

all = ["parallel", "async", "ml-full"]

# Optimization profiles
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

[profile.test]
opt-level = 1
debug = true
overflow-checks = true

# Benchmark profile
[profile.bench]
opt-level = 3
lto = true
codegen-units = 1
debug = false

[[bench]]
name = "compiler_benchmarks"
harness = false
path = "benches/compiler.rs"

[[bench]]
name = "vm_benchmarks"
harness = false
path = "benches/vm.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Workspace configuration (if this becomes part of a larger workspace)
# [workspace]
# members = [
#     "augustc-core",
#     "augustc-cli",
#     "augustc-vm",
#     "augustc-std",
#     "augustc-tools"
# ]
# resolver = "2"